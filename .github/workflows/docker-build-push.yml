name: Docker Build and Push to Harbor

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Harbor Registry
        uses: docker/login-action@v2
        with:
          registry: https://harbor.gambiarras.website
          username: ${{ secrets.HARBORUSER }}
          password: ${{ secrets.HARBORPASS }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: harbor.gambiarras.website/automate/auto-landing-page
          tags: |
            type=raw,value=${{ github.run_number }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Push Docker image with retry
        run: |
          MAX_RETRIES=5
          RETRY_COUNT=0
          PUSH_SUCCESSFUL=false
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ] && [ "$PUSH_SUCCESSFUL" = "false" ]; do
            echo "Attempt $(($RETRY_COUNT + 1)) of $MAX_RETRIES to push image to Harbor..."
            
            if docker push harbor.gambiarras.website/automate/auto-landing-page:${{ github.run_number }}; then
              PUSH_SUCCESSFUL=true
              echo "Push successful!"
            else
              RETRY_COUNT=$(($RETRY_COUNT + 1))
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                WAIT_TIME=$((30 * $RETRY_COUNT))
                echo "Push failed. Retrying in $WAIT_TIME seconds..."
                sleep $WAIT_TIME
              else
                echo "All $MAX_RETRIES attempts failed."
                exit 1
              fi
            fi
          done
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}